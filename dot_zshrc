setopt prompt_subst
source <(kubectl completion zsh)

## ZSH PLUGINS ##
# Source usefulsh plugins
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh


# You may need to manually set your language environment
# export LANG=en_US.UTF-8
source_if_exists () {
    if test -r "$1"; then
        source "$1"
    fi
}

## STARSHIP CONFIG ##
eval "$(starship init zsh)"
export STARSHIP_CONFIG=~/.config/starship/starship.toml

## ZELLIJ ##
# zsh <(curl -L zellij.dev/launch)

export EDITOR='nvim'
export REPOS="$HOME/Repos"
export GITUSER="MovieMaker93"
export GHREPOS="$REPOS/github.com/$GITUSER"
export WORKSPACE=$HOME/workspace
export DOTFILES=$HOME/.local/share/chezmoi
export VAULT="$WORKSPACE/note-taking/zettelkasten-vault/PKM system/"
export SCRIPTS="$WORKSPACE/scripts"
export HOMELAB="$GHREPOS/homelab"
export TERM=screen-256color
export XDG_CONFIG_HOME=$HOME/.config
export TMUXIFIER_LAYOUT_PATH="$HOME/tmux_layouts/layout/"

# ## HISTORY ##
# #############
# HISTFILE=$HOME/.zsh_history
# HISTSIZE=50000
# SAVEHIST=50000

setopt EXTENDED_HISTORY
setopt HIST_VERIFY
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Dont record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Dont record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Dont write duplicate entries in the history file.

## ALIASES DIRECTORIES ##
source_if_exists "$HOME/zsh-alias/aliases.zsh"
source_if_exists "$HOME/zsh-alias/git.zsh"
source_if_exists "$HOME/.aliases.local"
source_if_exists "$HOME/.fzf.zsh"

## PATH ##
export PATH=$HOME/bin:$SCRIPTS:$PATH
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
export LOCAL_BIN=$HOME/.local
export PATH=$GOPATH/bin:$GOROOT/bin:$LOCAL_BIN/bin:$PATH

## TMUX and TMUXINATOR ##
# if [ -z "$TMUX" ]; then
#     tmux attach -t default || tmux new -s default
# fi
# tmuxinator start dotfile
# tmuxinator start blog
# tmuxinator start vault
# tmuxinator start golang

# Turso
# export PATH="/home/moviemaker/.turso:$PATH"

# ~~~~~~~~~~~~~~~ Completion ~~~~~~~~~~~~~~~~~~~~~~~~

fpath+=~/.zsh/zsh-completitions/src
fpath+=~/.zfunc


autoload -Uz compinit
compinit -u

zstyle ':completion:*' menu select

# --------------------- Direnv hook -------------------
eval "$(direnv hook zsh)"

# Example to install completion:
# talosctl completion zsh > ~/.zfunc/_talosctl
neofetch

export NVM_DIR="$HOME/.config/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
